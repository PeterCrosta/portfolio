{"version":3,"sources":["data/Crosta Peter Resume 2020 07 06.pdf","data/columbia-logo.jpg","data/fullstack-logo.png","data/NYU.gif","data/DelveNYC-logo.jpg","data/fennel.png","data/drugCheck.jpg","components/Navbar.js","components/EducationSingle.js","components/ExperienceSingle.js","data/educationHistory.js","data/workHistory.js","components/EducationExperience.js","secrets.js","components/ContactMe.js","components/ProjectSingle.js","data/projectData.js","components/Projects.js","data/skills.js","components/SkillList.js","components/AboutMe.js","components/Footer.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","id","className","to","href","resumePDF","target","rel","EducationSingle","props","name","degree","gradDate","description","coursework","image","alt","src","map","course","idx","length","key","ExperienceSingle","org","title","dates","location","resp","el","educationHistory","fullstack","columbia","nyu","workHistory","locatoin","EducationExperience","school","job","secrets","userId","templateId","ContactMe","state","email","subject","message","handleChange","bind","handleSubmit","event","this","setState","value","preventDefault","emailjs","sendForm","then","result","console","log","text","error","onSubmit","htmlFor","type","onChange","React","Component","Project","link","imgSource","technologies","githubLink","tech","projects","DelveNYC","fennel","drugCheck","Projects","project","skills","level","skill","SkillList","el2","AboutMe","Footer","Routes","exact","path","component","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5e227d45.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Crosta Peter Resume 2020 07 06.9cc41072.pdf\";","module.exports = __webpack_public_path__ + \"static/media/columbia-logo.6b1bcf22.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fullstack-logo.42558764.png\";","module.exports = __webpack_public_path__ + \"static/media/NYU.2753a094.gif\";","module.exports = __webpack_public_path__ + \"static/media/DelveNYC-logo.e90be044.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fennel.69eeeb7b.png\";","module.exports = __webpack_public_path__ + \"static/media/drugCheck.8dc4e9c0.jpg\";","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport resumePDF from '/Users/petercrosta/Desktop/personal-work/portfolio/src/data/Crosta Peter Resume 2020 07 06.pdf'\n\n\nfunction Navbar() {\n    return (\n        <div id='nav-bar'>\n            <div id='banner'>\n                <h1 id='banner-name'>Peter Crosta</h1>\n            </div>\n            <nav className='nav-item-container'>\n                <Link className='nav-item' to='/about-me'>About Me</Link>\n                <Link className='nav-item' to='/projects'>Projects</Link>\n                <Link className='nav-item' to='/education-experience'>Education and Experience</Link>\n                <Link className='nav-item' to='/contact-me'>Contact Me</Link>\n                <a href={resumePDF} className='nav-item' target='_blank' rel='noopener noreferrer'>Resume</a>\n            </nav>\n        </div>\n    )\n}\n\nexport default Navbar","import React from 'react'\n\n\nconst EducationSingle = (props) => {\n    const {name, degree, gradDate, description, coursework, image} = props\n    return (\n        <div className='single-education double-border'>\n        <img alt={name} src={image} className='school-image' />\n        <div className='school-container'>\n            <h3 className='school-name title'>{name}</h3>\n            <div className='degree-grad-container'>\n                <span className='degree'>{degree}</span> <span className='grad-date'>{gradDate}</span>\n            </div>\n            <p className='description'>{description}</p>\n            <div className='subjects-container'>\n            <span className='subjects'>Subjects included: </span> <span className='single-technology'>{coursework.map((course, idx) => {\n                return idx === coursework.length - 1 ? (<span key={idx} className='sigle-course'>{course}</span>) :\n                (<span key={idx} className='sigle-course'>{course} - </span>)\n                })}</span>\n            </div>\n\n        </div>\n    </div>\n    )\n}\n\nexport default EducationSingle","import React from 'react'\n\n// let righty = 'experience-single double-border right-align'\n\nconst ExperienceSingle = props => {\n const {org, title, dates, location, resp} = props\n return (\n     <div className='experience-single double-border'>\n        <div className='experience-titles'>\n            <div className='org-job-date-container' >\n                <div className='org-job'>\n                    <span className='org title'>{org}</span>\n                    <span className='job-title'>, {title}</span>\n                </div>\n                <div className='dates-container'>\n                    <span className='dates right-align'> {dates[0]} - {dates[1]}</span>\n                </div>\n            </div>\n        </div>\n        <div className='location'>{location}</div>\n        <ul className='resp-container'>\n            {resp.map((el, idx) => (\n                <li key={idx}>{el}</li>\n            ))}\n        </ul>\n     </div>\n )\n}\n\n\nexport default ExperienceSingle","import columbia from '/Users/petercrosta/Desktop/personal-work/portfolio/src/data/columbia-logo.jpg'\nimport fullstack from './fullstack-logo.png'\nimport nyu from './NYU.gif'\n\nconst educationHistory = [{\n    name: 'Fullstack Academy',\n    degree: 'Fullstack Software Engineering Immersive',\n    gradDate: 'February, 2020', \n    description: 'Fullstack Academy is a software engineering immersive. Junior Phase includes six weeks of lectures, hands-on labs, and pair-programming workshops. Senior Phase is made up of three projects: a group, e-commerce, CRUD app, a solo hack-a-thon, and a group capstone project. For greater detail, see Projects.',\n    coursework: ['Javascript', 'Node.js', 'Express', 'SQL', 'Sequelize', 'React', 'Redux', 'HTML', 'CSS', 'Algorithms'],\n    image: fullstack\n},\n    {\n    name: 'Columbia University',\n    degree: 'Premedical Postbaccalaureate',\n    gradDate: 'May, 2018',\n    description: 'The Columbia Premedical Postbaccalaureate is a certificate program for working people who already have bachelor’s degrees who want to apply to medical school.',\n    coursework: ['Calculus', 'Chemistry', 'Physics', 'Organic Chemistry', 'Biology', 'Neuropsychology'],\n    image: columbia\n},\n{\n    name: 'New York University',\n    degree: 'B.S. Medica, Culture, and Communications',\n    gradDate: 'May, 2011',\n    description: 'My focus in Media, Culture, and Communications was geared towards a career in political communications. Though that is no longer my career goal, I still use many of the skills I developed, like detail-oriented copy- and code-writing, media literacy, public speaking, and conflict resolution.',\n    coursework: ['Intellectual Property Law', 'International Development', 'Political Rhetoric', 'Public Relations', 'Ethics and Media', 'Mass Persuasion and Propaganda'],\n    image: nyu\n}]\n\nexport default educationHistory","const workHistory = [\n    {\n        org: \"Fullstack Academy\",\n        title: \"Software Engineering Teaching Fellow\",\n        dates: [\"March 2020\", \"May 2020\"],\n        location: \"New York, NY\",\n        resp: [\"Acted as project manager of student projects, leading agile work environment\", \"Led projects' daily stand-ups, weekly code reviews, helped debug recalcitrant issues, and consulted on applications' designs and implementations\", \"Conducted 2-4 technical interviews per week for prospective students\"]\n    },\n    {\n        org: \"Columbia Antiepileptic Drug Database\",\n        title: \"Research Coordinator\",\n        dates: [\"June 2017\", \"Nov 2019\"],\n        location: \"New York, NY\",\n        resp: [\"Self-taught SQL for precise data extraction\", \"Drafted reports on efficacy of new anti-epileptic drugs for drugs’ manufacturers\", \"Translated patient charts into quantifiable data for database of over 6,000 patients, tracking over 70 variables\", \"Renewed research protocol with the Internal Review Board\", \"Implemented policy discussions to ensure consistent entries between three local contributors and a companion site at Yale\"]\n    },\n    {\n        org: \"Xandr (formerly AppNexus)\",\n        title: \"Auditor\",\n        dates: [\"Dec 2011\", \"Aug 2015\"],\n        locatoin: \"New York, NY\",\n        resp: [\"Ensured advertisements met technical quality standards and were consistent with intended technical attributes\", \"Flagged advertisements with potentially controversial or ethically dubious content\", \"Wrote policies to streamline the auditing process\"]\n    }\n]\n\nexport default workHistory","import React from 'react'\nimport EducationSingle from './EducationSingle'\nimport ExperienceSingle from './ExperienceSingle'\nimport educationHistory from '../data/educationHistory'\nimport workHistory from '../data/workHistory'\n\nfunction EducationExperience() {\n    return (\n        <div id='education-experience'>\n            <h1 className='section-header'>Education</h1>\n            <div className='education-container'>\n                {educationHistory.map((school,idx)=> (\n                    <EducationSingle \n                    key={idx}\n                    idx={idx}\n                    name={school.name}\n                    degree={school.degree}\n                    gradDate={school.gradDate}\n                    description={school.description}\n                    coursework={school.coursework}\n                    image={school.image}\n                    />\n                ))}\n            </div>\n            <h1 className='section-header'>Experience</h1>\n            <div className='experience-container'>\n                {workHistory.map((job, idx) => (\n                    <ExperienceSingle\n                    key={idx}\n                    idx={idx}\n                    org={job.org}\n                    title={job.title}\n                    dates={job.dates}\n                    locatoin={job.location}\n                    resp={job.resp} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default EducationExperience","const secrets = {\n    userId : 'user_lZTftSZbBnrBEFVVy4oQ8',\n    templateId : 'template_3A0yjLyK'\n    \n}\n\n\nexport default secrets","import React from 'react'\n// import {Button} from 'reactstrap'\nimport emailjs from 'emailjs-com';\nimport secrets from '../secrets'\n\nclass ContactMe extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            name: '',\n            email: '',\n            subject: '',\n            message: ''\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        emailjs.sendForm('gmail', secrets.templateId, event.target, secrets.userId)\n      .then((result) => {\n          console.log(result.text);\n      }, (error) => {\n          console.log(error.text);\n      });\n      this.setState({\n        name: '',\n        email: '',\n        subject: '',\n        message: ''\n    })\n  }\n\n    render() {\n        return (\n            <div id='contact-me'>\n                <h1 className='header title'>Contact Me</h1>\n                <div className='contact-me-container'>\n                <form id='contact-form' onSubmit={this.handleSubmit}>\n                    <label htmlFor='name' >Name</label>\n                    <input type='text' onChange={this.handleChange} name='name' value={this.state.name}/>\n                    <label htmlFor='email' >Your email</label>\n                    <input type='email' onChange={this.handleChange} name='email' value={this.state.email}/>\n                    <label htmlFor='subject' >Subject</label>\n                    <input type='text' onChange={this.handleChange} name='subject' value={this.state.subject}/>\n                    <label htmlFor='message' >Message</label>\n                    <textarea type='text' onChange={this.handleChange} name='message' value={this.state.message}/>\n                    <button type='submit'>Send</button>\n                </form>\n                <div className='post-contact-text'>\n                    <div>Or email me directly</div>\n                    <a href='mailto:pscrosta@gmail.com'>\n                        PSCrosta@gmail.com\n                    </a>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ContactMe","import React from 'react'\n\nconst Project = (props) => {\n    const {name, link, imgSource, description, technologies, githubLink} = props\n    return (\n        <div className='project double-border'>\n            <a href={link} target='_blank' rel='noopener noreferrer'>\n                <h2 className='title'>{name}</h2>\n                <img alt='placeholder' className='project-image' src={imgSource}/>\n                <p className='description'>{description}</p>\n            </a>\n            <h3>Technologies used:</h3>\n            <div className='skills'>\n                {technologies.map((tech, idx) => {\n                    return idx === technologies.length - 1 ?    \n                    (<span key={idx} className='single-technology'>{tech}</span>) :\n                    (<span key={idx} className='single-technology'>{tech} - </span>)\n                }\n                )}\n            </div>\n            <a href={githubLink} className='github-link' target='_blank' rel='noopener noreferrer'>\n                <img alt='github' className='github-image' src='https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSY72H-Wfx7zWrrdzlPHL8o0nbcvs03YMlUgYoqUormf2b1DOy6&usqp=CAU' />\n            </a>\n        </div>\n    )\n}\n\nexport default Project","import DelveNYC from './DelveNYC-logo.jpg'\nimport fennel from './fennel.png'\nimport drugCheck from './drugCheck.jpg'\n\n// const placeholderAddress = 'https://via.placeholder.com/350x150'\n\nconst projects = [{\n    name: 'Delve.NYC',\n    link: 'http://www.delve.nyc/',\n    imgSource: DelveNYC,\n    description: 'A site for your next apartment hunt: Visualizing NYC quality-of-life data to help you pick a neighborhood before picking an apartment',\n    technologies: ['Javascript', 'React', 'D3', 'Express', 'Mongodb', 'NYC Open Data api'],\n    githubLink: 'https://github.com/super-smash-brothers/delve-nyc'\n},\n{\n    name: `Fennel's Fresh Flowers`,\n    link: 'https://github.com/Fennnel-s-Fresh-Flowers/grace-shopper',\n    imgSource: fennel,\n    description: 'A single-page, e-commerce site, selling fresh flowers. Featured user profiles, an all-products and a single-product page, a guest and user cart, order history, and checkout',\n    technologies: ['Javascript', 'React', 'Redux', 'Express', 'Express-Session', 'Sequelize', 'PostgreSQL'],\n    githubLink: 'https://github.com/Fennnel-s-Fresh-Flowers/grace-shopper'\n},\n{\n    name: 'Drug Check',\n    link: 'https://github.com/PeterCrosta/Stackathon',\n    imgSource: drugCheck,\n    description: `A consumer-facing site where users can create a profile that tracks what allergies the person has and what prescriptions the user is taking, and informs him or her of possible interactions scraped from medical websites.\n    All technology was learned specifically for this project.`,\n    technologies: ['Python', 'Django', 'SQLite', 'Beautiful Soup', 'Requests'],\n    githubLink: 'https://github.com/PeterCrosta/Stackathon'\n}]\n\nexport default projects","import React from 'react'\nimport Project from './ProjectSingle'\nimport projects from '../data/projectData'\n\nconst Projects = () => {\n    return (\n        <div id='projects'>\n            <h1>Projects</h1>\n            <div className='container'>\n                {projects.map((project, idx) => (\n                    <Project \n                    className='single-project-container'\n                    key={idx}\n                    name={project.name}\n                    link={project.link}\n                    imgSource={project.imgSource}\n                    description={project.description}\n                    technologies={project.technologies}\n                    githubLink={project.githubLink}\n                    />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Projects","const skills = [\n    {\n        level: 'Proficient',\n        skill: ['JavaScript', 'Node.js', 'Express', 'Sequelize', 'React', 'Redux', 'Git', 'D3', 'HTML', 'CSS']\n    },\n    {\n        level: 'Knowledgeable',\n        skill: ['SQL', 'Chai', 'Session', 'Python', 'Django', 'Vue.js']\n    },\n    {\n        level: 'Some Experience',\n        skill: ['Heroku', 'SQLite', 'Beautiful Soup', 'Requests']\n    }\n]\n\nexport default skills","import React from 'react'\nimport skills from '../data/skills'\n\nconst SkillList = (props) => {\n    return (\n        <div id='skill-list-container'>\n            {skills.map((el, idx) => {\n                return (\n                    <div className='skill-level' key={idx} >\n                        <span>{el.level}: </span>\n                        {el.skill.map((el2, idx) => <span className='single-skill' key={idx}>{el2}</span>)}\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default SkillList","import React from 'react'\nimport SkillList from './SkillList'\n\nfunction AboutMe() {\n    return (\n        <div id='about-me' className='container'>\n            <h1>About Me</h1>\n            <div id='about-me-container' className='double-border'>\n                <img className='head-shot' alt='headshot' src='https://media-exp1.licdn.com/dms/image/C4D03AQG_1qsTnDvwYw/profile-displayphoto-shrink_200_200/0?e=1596672000&v=beta&t=4DsAsw63M05gdShk-_AgTRDSr_aHNkh5h4_R2hoMvlU'/>\n                <div className='about-me-text'>\n                    <p className='description'>\n                    My name is Peter Crosta. I am a fullstack software engineer and former political campaign manager and neurology researcher. I discovered my passion for software development after teaching myself SQL for a neurology research study. In that role, I quickly learned to love the task of writing a query from the initial whiteboarding of what columns, on what tables, need to be joined, and with what conditionals, all the way down to meticulously writing the code in a text editor before pasting it in the terminal.\n                    </p>\n                    <p className='description'>\n                    That passion for coding led me to enroll in Fullstack Academy, where the formal curriculum is built around the NERDS stack (Node, Express, React/Redux, and database using SQL), but its real value was teaching me self-reliance as a coder, how to code with others, and that any technology is within my grasp.\n                    </p>\n                </div>\n            </div>\n            <h3 className='title' >Skills</h3>\n            <SkillList/>\n        </div>\n    )\n}\n\nexport default AboutMe","import React from 'react'\n\n\nconst Footer = (props) => {\n    return (\n        <div id='footer'>\n            <a href='https://www.linkedin.com/in/peter-crosta/' target='_blank' rel='noopener noreferrer'>\n                <img className='footer-image' alt='linkedIn logo' src='https://image.flaticon.com/icons/png/512/61/61109.png' />\n            </a>\n            <a href='https://github.com/PeterCrosta' target='_blank' rel='noopener noreferrer'>\n                <img className='footer-image' src='https://cdn0.iconfinder.com/data/icons/octicons/1024/mark-github-512.png' alt='github logo' />\n            </a>\n            <a href='mailto:pscrosta@gmail.com'>\n                <img className='footer-image' src='https://cdn2.iconfinder.com/data/icons/freecns-cumulus/16/519948-008_Mail-512.png' alt='email logo' />\n            </a>\n        </div>\n    )\n}\n\nexport default Footer","import React from 'react'\nimport {Route, Switch} from 'react-router-dom'\nimport {AboutMe, ContactMe, EducationExperience, Projects} from './components'\n\nfunction Routes() {\n    return (\n        <div id='routes' >\n            <Switch>\n                <Route exact path='/' component={AboutMe} />\n                <Route path='/about-me' component={AboutMe} />\n                <Route path='/education-experience' component={EducationExperience} />\n                <Route path='/projects' component={Projects} />\n                <Route path='/contact-me' component={ContactMe} />\n            </Switch>\n        </div>\n\n    )\n}\n\nexport default Routes","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport {Navbar} from './components'\nimport Routes from './Routes'\nimport {Footer} from './components'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <Navbar />\n      <Routes />\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n        {/* <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p> */}\n        {/* <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a> */}\n        <Footer />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router >\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}